// Options for caching a block asynchronously
// next available id: 6
message AsyncCacheRequest {
  optional int64 block_id = 1;
  // TODO(calvin): source host and port should be replace with WorkerNetAddress
  optional string source_host = 2;
  optional int32 source_port = 3;
  optional OpenUfsBlockOptions open_ufs_block_options = 4;
  optional int64 length = 5;
}

// Options to open a UFS block.
// next available id: 7
message OpenUfsBlockOptions {
  optional string ufs_path = 1;
  // The offset of the block in within the file.
  optional int64 offset_in_file = 2;
  // The block size.
  optional int64 block_size = 3;
  optional int32 maxUfsReadConcurrency = 4;
  optional int64 mountId = 5;
  // If set, do not try to cache the block locally when reading the data from the UFS.
  optional bool no_cache = 6;
  // The client does not need to set this. This is set by the worker.
  optional string user = 7;
}

message LocalBlockOpenResponse {
  optional string path = 1;
}

